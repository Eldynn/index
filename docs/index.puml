@startuml
class Profile {
}
class Identity {
    +id: string
}
class User implements HaveMembers {
    +profile: Profile
}
class Member {
    +user: User
    +group: Group
    +profile: Profile
    +destroy(): void
    +{static} build(user: User, group: Group, profile?: Profile): Member
}
interface HaveMembers {
    +size: number
    +add(member: Member): void
    +delete(member: Member): void
    +destroy(): void
    +has(member: Member): boolean
    +get(id: string): Member
}
class Group implements HaveMembers {
    +owner: User
    +profile: Profile
}
class Index {
    +users: Map<string, User>
    +groups: Map<string, Group>
    -items: Map<string, Identity>
    +add(identity: Identity): Index
    +delete(identity: Identity): Index
    +get(id: string): Identity
}

Index o-- User
Index o-- Group
User o-- Profile
Group o-- Profile
Member o-- Profile

Member o-- Group
Member o-- User
HaveMembers *-- "many" Member
@enduml
